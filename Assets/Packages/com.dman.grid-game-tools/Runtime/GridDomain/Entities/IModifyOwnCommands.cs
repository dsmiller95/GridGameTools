using System;
using System.Collections.Generic;
using Dman.GridGameTools.Commands;

namespace Dman.GridGameTools.Entities
{
    public interface IModifyOwnCommands
    {
        /// <summary>
        /// called immediately before the command is executed, but after the <see cref="IRejectOwnCommands"/> check.
        /// </summary>
        /// <param name="command"></param>
        /// <param name="hasModifiedCommand"></param>
        /// <returns></returns>
        public (object modifiedBy, IDungeonCommand newCommand) ModifyCommand(IDungeonCommand command, Func<object, bool> hasModifiedCommand);
    }

    public interface IRejectOwnCommands
    {
        /// <summary>
        /// invoked immediately before the command would be executed. if true, the command will be skipped.
        /// </summary>
        /// <param name="command"></param>
        /// <returns></returns>
        public bool WillRejectCommand(IDungeonCommand command);
    }

    public interface IRespondToCommands
    {
        /// <summary>
        /// invoked immediately after the given command -was- executed. will append any additional commands onto the stack.
        /// the additional commands will be executed in the order they are returned, after all commands generated by the command itself are executed.
        /// </summary>
        /// <param name="command"></param>
        /// <returns></returns>
        public IEnumerable<IDungeonCommand> RespondToCommand(IDungeonCommand command);
    }
}